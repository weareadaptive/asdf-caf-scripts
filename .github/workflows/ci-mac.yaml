---
name: Mac test

on:
  workflow_dispatch:
  push:
    branches: ["*"]

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  pre-clean:
    runs-on: caf-adaptive-mac
    steps:
      - name: Reset OrbStack
        run: |
          echo "Resetting OrbStack and deleting all data..."
          if orb reset -y; then
            echo "Done"
          else
            echo "Failed to reset OrbStack."
            exit 1
          fi
      - name: Start OrbStack
        run: |
          success=false
          echo "Starting OrbStack..."
          for i in {1..5}; do
            if orb start; then
              echo "OrbStack successfully started."
              success=true
              break
            fi
            sleep 5
          done
          if [ "$success" = false ]; then
            echo "Failed to start OrbStack after 5 attempts."
            exit 1
          fi

  test-asdf-caf-scripts-mac:
    runs-on: caf-adaptive-mac
    env:
      MINIKUBE_VERSION: "latest"
      ASDF_VERSION: "v0.14.1"
      CAF_LCL_K8S_MEMORY: "8" #Limit the amount of memory we use since runners have limited resources
      ASDF_DIR: /opt/asdf
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install asdf for macOS
        run: |
          # Install ASDF and plugins
          asdf plugin add caf-scripts "https://github.com/weareadaptive/asdf-caf-scripts"
          echo -e "\ncaf-scripts ref:${{ github.sha }}" >> .tool-versions
          cut -d' ' -f1 .tool-versions | xargs -I{} asdf plugin-add {} || true
          asdf install

      - name: Test caf_create_local_k8s
        run: |
          . "${{ env.ASDF_DIR }}/asdf.sh"
          caf_create_local_k8s.sh

      - name: Test caf_route_to_local_k8s
        run: |
          # Install ingress-nginx
          helm upgrade --install ingress-nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx --namespace nginx-ingress --create-namespace

          . "${{ env.ASDF_DIR }}/asdf.sh"
          caf_route_to_local_k8s.sh &
          curl -s --connect-timeout 5 --retry 5 --retry-delay 5 kube-dns.kube-system.svc.cluster.local:9153/metrics

